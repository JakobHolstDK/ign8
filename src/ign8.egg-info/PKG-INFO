Metadata-Version: 2.1
Name: ign8
Version: 4.4.35
Summary: Knowit automation lifecycle management
Author-email: Jakob Holst <jho@miracle.dk>
Maintainer-email: Jakob Holst <jho@miracle.dk>
License: Copyright (c) 2016 The Python Packaging Authority (PyPA)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of
        this software and associated documentation files (the "Software"), to deal in
        the Software without restriction, including without limitation the rights to
        use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
        of the Software, and to permit persons to whom the Software is furnished to do
        so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
        
        
Project-URL: Homepage, https://github.com/JakobHolstDK/ign8
Project-URL: Bug Reports, https://github.com/JakobHolstDK/ign8/issues
Project-URL: Source, https://github.com/JakobHolstDK/ign8
Keywords: ign8,awx,ansible,automation
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: redis
Requires-Dist: flask
Requires-Dist: pynetbox
Requires-Dist: wheel
Requires-Dist: hvac
Requires-Dist: xmltodict
Requires-Dist: netbox
Requires-Dist: urllib3
Requires-Dist: cryptography
Requires-Dist: PyYAML
Requires-Dist: toml
Requires-Dist: django
Requires-Dist: djangorestframework
Requires-Dist: gunicorn
Requires-Dist: ansible
Requires-Dist: ansible-core
Requires-Dist: paramiko
Provides-Extra: dev
Requires-Dist: check-manifest; extra == "dev"
Provides-Extra: test
Requires-Dist: coverage; extra == "test"

# Keep ign8 and automate




### Install and update ign8

pip install --upgrade ign8


### Basic configuration

ign8 init

creates a basic ign8 configuration

/etc/ign8/ign8.json and /etc/ign8/secrets.json

```json
{
  "organization": [
    {
      "name": "ign8",
      "meta":
        {
          "description": "Keep ign8 and automate",
          "max_hosts": 100,
          "default_environment": "Ansible Engine 2.9 execution environment",
          "secrets": "files"
        },
      "projects": [
        {
          "name": "main",
          "description": "Keep ign8 and automate",
          "scm_type": "git",
          "scm_url": "git@github.com:JakobHolstDK/openknowit_ansibleautomation_main.git",
          "scm_branch": "main",
          "credential": "github",
          "master": "True"
        }
      ],
      "inventories": [
        {
          "name": "000_masterinventory",
          "description": "Inventorycontaining all servers under automation control",
	  "variables": {
		  "serviceaccount": {
	            "name": "knowit",
		    "gecos": "Ansible automation manager"
		  }
	  },
          "type": "static"
        },
        {
          "name": "001_netboxinventory",
          "description": "Inventory containing all servers in netbox",
	  "variables": {
		  "serviceaccount": {
	            "name": "knowit",
		    "gecos": "Ansible automation manager"
		  }
	  },
          "type": "netbox"
	}
      ],
      "hosts": [
        {
          "name": "prodign8001.openknowit.com", "description": "Server cabable for running selfmaintainance", "inventories": ["000_masterinventory"]
        }
      ],
      "templates": [
        {
          "name": "000_ansibleautomationmanager_checkup",
          "description": "Master job for self healing ansible automation as code",
          "job_type": "run",
          "inventory": "000_masterinventory",
          "project": "main",
          "EE": "Automation Hub Default execution environment",
          "credentials": "ign8server",
          "playbook": "checkup.yml"
        },
        {
          "name": "000_ansibleautomationmanager_update",
          "description": "Maintain ansible manager and prereqs",
          "job_type": "run",
          "inventory": "000_masterinventory",
          "project": "main",
          "EE": "Automation Hub Default execution environment",
          "credentials": "ign8server",
          "playbook": "ansiblemanager.yml"
        }
      ],
      "schedules": [
        {
          "name": "000_jobschedule_ansibleautomationmanager_checkup",
          "type": "job",
          "template": "000_ansibleautomationmanager_checkup",
          "description": "Master job for ensuring connectivity",
          "local_time_zone": "CET",
          "run_every_minute": "5",
          "start": "now",
          "end": "never"
        },
        {
          "name": "000_jobschedule_ansibleautomationmanager_update",
          "type": "job",
          "template": "000_ansibleautomationmanager_update",
          "description": "Master job updating automation manager",
          "local_time_zone": "CET",
          "run_every_minute": "5",
          "start": "now",
          "end": "never"
        },
        {
          "name": "000_projectschedule_ansibleautomationmanager",
          "type": "project",
          "project": "main",
          "description": "Master job for syncing project main",
          "local_time_zone": "CET",
          "run_every_minute": "10",
          "start": "now",
          "end": "never"
        }
      ],
      "users":
        {
          "user_vault_path": "project/openknowit/users",
          "description": "AD integration is mandatory"
        },
      "labels":
      [
        {
          "name": "static"
        },
        {
          "name": "production"
        },
        {
           "name": "test"
        }
      ]
    }
  ]
}

```
and the secret.jsob
```json
{
  "ign8": {
    "vault": 
    [
     {
      "name": "myvault",
      "description": "Credentials to access a hashicorp vault",
      "vault_id": "https://vault.example.com",
      "vault_token": "/etc/ign8/vault.token"
    }
    ],
    #  Here we have a simple server credential built using a file located on the ign8 server
    "ssh": [
     {
      "name": "ign8server",
      "username": "ign8",
      "password": "/etc/ign8/ign8server.password",
      "description": "Credentials to login to ign8 server and setup ign8 service",
      "ssh_private_key": "/opt/ign8/ign8server_rsa",
      "privilege_escalation_method": "sudo",
      "privilege_escalation_username": "root",
      "privilege_escalation_password": "/etc/ign8/ign8server.password"
    },
    {
      "name": "productionserver",
      "username": "root",
      "password": "/etc/ign8/productionserver.password",
      "description": "Credentials to login to productionservers",
      "ssh_private_key": "/opt/ign8/prodservers_rsa",
      "privilege_escalation_method": "sudo",
      "privilege_escalation_username": "root",
      "privilege_escalation_password": "xxx"
    }
    ],
  "scm":[
     {
      "name": "github",
      "username": "Githubuser",
      "password": "",
      "description": "Credential to connect to git",
      "type": "Source Control",
      "ssh_private_key": "/opt/ign8/github",
      "kind": "scm"
    }
   ]
  }
}



```



![Python Logo](https://www.python.org/static/community_logos/python-logo.png "Sample inline image")

This is the README file for IGN8
you need this to access your ansible server

export TOWER_PASSWORD="<ADMIN PAASSWORD>"
export TOWER_HOST="https://<ANSIBLE HOST>"
export TOWER_USERNAME="<ADMIN USER>"




{
  "ign8": {
    "vault": {
      "vault_addr": "https://demo.vault.com",
      "vault_token": "xcvcvbdsfgsdsdfsdfsdf"
    },
    "ssh": {
      "name": "ign8server",
      "username": "knowit",
      "password": "xxx",
      "descriptions": "Credentials to login to ign8 server and setup ign8 service",
      "ssh_private_key": "/opt/ign8/id_rsa",
      "privilege_escalation_method": "xxx"
    }
  },
  "scm": {}
}

